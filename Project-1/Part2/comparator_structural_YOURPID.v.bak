// Filename:     adder1bit.v
// Author:       J.S. Thweatt
// Date Created: 29 July 2019
// Version:      1 (Date Last Modified: 29 July 2019) 
// Description:  This file contains a 1-bit full adder
//               implemented structurally using built-in
//               primitive operators.

// DELETE THESE COMMENTS AFTER YOU RENAME YOUR FILE AND ADD IT TO THE PROJECT
// Insert your Virginia Tech PID into part of the module name labeled YOURPID.
// - Your Virginia Tech PID is the part of your e-mail address preceding "@vt.edu".
// Save your file with the complete name of your module, then add the re-named file to the project.
// - Right-click in the Project Window, choose Add to Project > Existing File, then Browse for the file.
// Remove the original file from the Project. You don't have to delete the file from your disk.
// - Right-click the file name in the Project Window, and choose Remove from Project.

module comparator_structural_YOURPID(valA, valB, aGTb, aGEb, aLTb, aLEb, aEQb, aNEb);
   input  [2:0] valA, valB;
   output       aGTb, aGEb, aLTb, aLEb, aEQb, aNEb;

   // Your module MUST consist solely of primitive logic gates.
   // Declare additional wires as needed.
   
   // A == B --- (A0'B0' + A0B0)(A1'B1' + A1B1)(A2'B2' + A2B2)
   aEQb = (~(A[0]|B[0])|(A[0]&B[0]))&(~(A[1]|B[1])|(A[1]&B[1]))&(~(A[2]|B[2])|(A[2]&B[2]))
   // A != B --- (A == B)'
   aNEb = ~aEQb
   // A < B --- A2'B2 + [(A2'B2' + A2B2) * A1'B1] + [(A2'B2' + A2B2) *[(A1'B' + A1B1) * A0'B0]
   aLTb = ((~A[2])&B[2]) | ((~(A[2]|B[2]) + (A[2]&B[2]))&((~A[1])&B[1])) | *((~(A[2]|B[2]) | (A[2]&B[2])) & ((~(A[1]|B[1]) | (A[1]&B[1]))&((~A[0])&B[0])))
   // A <= B --- A < B + A == B
   aLEb = aLTb | aEQb 
   // A > B --- (A>B + A==B)'
   aGTb = ~(aLTb | aEQb)
   // A >= B --- A > B + A == B
   aGEb = aGTb | aEQb

endmodule
